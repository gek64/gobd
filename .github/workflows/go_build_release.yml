name: Go Build and Release

on:
  #  push:
  #    branches: [ main ]
  #    paths-ignore:
  #      - 'docs/**'
  #      - '.github/**'
  #      - '**.md'
  #      - 'LICENSE'
  #  pull_request:
  #    branches: [ main ]
  #    paths-ignore:
  #      - 'docs/**'
  #      - '.github/**'
  #      - '**.md'
  #      - 'LICENSE'
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: false
        default: 'latest'
        # use ${{ github.event.inputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup golang
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Build
        run: |
          # 编译gobd
          git clone https://github.com/gek64/gobd.git
          cd gobd
          go build -o "${{ github.workspace }}/gobd_runner"
          chmod +x "${{ github.workspace }}/gobd_runner"
          
          # 编译程序
          cd ${{ github.workspace }}
          
          # 获取版本信息
          echo "$(go run . -v)" > bin/version.txt
          
          # 批量编译
          go mod tidy
          "${{ github.workspace }}/gobd_runner" -main -d bin -no_debug -no_cgo

          # 获取sha256 checksum
          sha256sum bin/* > bin/SHA256SUMS.txt

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 0
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_files
          path: bin/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: bin

      - name: Read version
        run: |
          # 获取版本信息
          echo "VERSION=$(cat bin/version.txt)" >> $GITHUB_ENV
          rm -rf bin/version.txt

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "bin/*"
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}

  delete-artifacts:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: "0s"